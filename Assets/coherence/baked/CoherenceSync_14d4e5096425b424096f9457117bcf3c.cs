// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using Coherence.Toolkit;
    using Coherence.Toolkit.Bindings;
    using Coherence.Entities;
    using Coherence.ProtocolDef;
    using Coherence.Brook;
    using Coherence.Toolkit.Bindings.ValueBindings;
    using Coherence.Toolkit.Bindings.TransformBindings;
    using Coherence.Connection;
    using Coherence.SimulationFrame;
    using Coherence.Interpolation;
    using Coherence.Log;
    using Logger = Coherence.Log.Logger;
    using UnityEngine.Scripting;
    [UnityEngine.Scripting.Preserve]
    public class Binding_14d4e5096425b424096f9457117bcf3c_fb08a1cf66fd4f98bb64c2d94d247538 : PositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldPosition);
        public override string CoherenceComponentName => "WorldPosition";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(coherenceSync.coherencePosition); }
            set { coherenceSync.coherencePosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldPosition)coherenceComponent).value;
            if (!coherenceSync.HasParentWithCoherenceSync) { value += floatingOriginDelta; }

            var simFrame = ((WorldPosition)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldPosition)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldPosition();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_14d4e5096425b424096f9457117bcf3c_d89cc70bc2f74fb79717340aef294810 : RotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldOrientation);
        public override string CoherenceComponentName => "WorldOrientation";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(coherenceSync.coherenceRotation); }
            set { coherenceSync.coherenceRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldOrientation)coherenceComponent).value;

            var simFrame = ((WorldOrientation)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldOrientation)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldOrientation();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_14d4e5096425b424096f9457117bcf3c_f55b4048c6694c53b8c4b4406c436a91 : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_14d4e5096425b424096f9457117bcf3c_7080837773287956486);
        public override string CoherenceComponentName => "_14d4e5096425b424096f9457117bcf3c_7080837773287956486";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).FullBodyWeight;

            var simFrame = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).FullBodyWeightSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.FullBodyWeight = Value;
            }
            else
            {
                update.FullBodyWeight = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.FullBodyWeightSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _14d4e5096425b424096f9457117bcf3c_7080837773287956486();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_14d4e5096425b424096f9457117bcf3c_9c603a7163b4418f88ef82e9c84273dc : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_14d4e5096425b424096f9457117bcf3c_7080837773287956486);
        public override string CoherenceComponentName => "_14d4e5096425b424096f9457117bcf3c_7080837773287956486";
        public override uint FieldMask => 0b00000000000000000000000000000010;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).CrouchWeight;

            var simFrame = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).CrouchWeightSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.CrouchWeight = Value;
            }
            else
            {
                update.CrouchWeight = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.CrouchWeightSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _14d4e5096425b424096f9457117bcf3c_7080837773287956486();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_14d4e5096425b424096f9457117bcf3c_52a203a5445344ffb8056364907b45ed : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_14d4e5096425b424096f9457117bcf3c_7080837773287956486);
        public override string CoherenceComponentName => "_14d4e5096425b424096f9457117bcf3c_7080837773287956486";
        public override uint FieldMask => 0b00000000000000000000000000000100;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).ProneWeight;

            var simFrame = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).ProneWeightSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.ProneWeight = Value;
            }
            else
            {
                update.ProneWeight = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.ProneWeightSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _14d4e5096425b424096f9457117bcf3c_7080837773287956486();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_14d4e5096425b424096f9457117bcf3c_95303217d8af4d22b2d6a0e9771dfde3 : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_14d4e5096425b424096f9457117bcf3c_7080837773287956486);
        public override string CoherenceComponentName => "_14d4e5096425b424096f9457117bcf3c_7080837773287956486";
        public override uint FieldMask => 0b00000000000000000000000000001000;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).SprintPoseWeight;

            var simFrame = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).SprintPoseWeightSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.SprintPoseWeight = Value;
            }
            else
            {
                update.SprintPoseWeight = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.SprintPoseWeightSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _14d4e5096425b424096f9457117bcf3c_7080837773287956486();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_14d4e5096425b424096f9457117bcf3c_2143488faea5481abe29722b89da3310 : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_14d4e5096425b424096f9457117bcf3c_7080837773287956486);
        public override string CoherenceComponentName => "_14d4e5096425b424096f9457117bcf3c_7080837773287956486";
        public override uint FieldMask => 0b00000000000000000000000000010000;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).MaskLeftHandIK;

            var simFrame = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).MaskLeftHandIKSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.MaskLeftHandIK = Value;
            }
            else
            {
                update.MaskLeftHandIK = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.MaskLeftHandIKSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _14d4e5096425b424096f9457117bcf3c_7080837773287956486();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_14d4e5096425b424096f9457117bcf3c_2861594a33444fa8a7b59e06c788ca0d : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_14d4e5096425b424096f9457117bcf3c_7080837773287956486);
        public override string CoherenceComponentName => "_14d4e5096425b424096f9457117bcf3c_7080837773287956486";
        public override uint FieldMask => 0b00000000000000000000000000100000;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).OverlayType;

            var simFrame = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).OverlayTypeSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.OverlayType = Value;
            }
            else
            {
                update.OverlayType = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.OverlayTypeSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _14d4e5096425b424096f9457117bcf3c_7080837773287956486();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_14d4e5096425b424096f9457117bcf3c_7a71492fa10d47e0b77ed8b0caf02a79 : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_14d4e5096425b424096f9457117bcf3c_7080837773287956486);
        public override string CoherenceComponentName => "_14d4e5096425b424096f9457117bcf3c_7080837773287956486";
        public override uint FieldMask => 0b00000000000000000000000001000000;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).MoveX;

            var simFrame = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).MoveXSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.MoveX = Value;
            }
            else
            {
                update.MoveX = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.MoveXSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _14d4e5096425b424096f9457117bcf3c_7080837773287956486();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_14d4e5096425b424096f9457117bcf3c_e67cf2f0344f482e8aeedb770df1af50 : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_14d4e5096425b424096f9457117bcf3c_7080837773287956486);
        public override string CoherenceComponentName => "_14d4e5096425b424096f9457117bcf3c_7080837773287956486";
        public override uint FieldMask => 0b00000000000000000000000010000000;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).MoveY;

            var simFrame = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).MoveYSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.MoveY = Value;
            }
            else
            {
                update.MoveY = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.MoveYSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _14d4e5096425b424096f9457117bcf3c_7080837773287956486();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_14d4e5096425b424096f9457117bcf3c_b742f1ab9b2b449b9814ad9f4f133d21 : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_14d4e5096425b424096f9457117bcf3c_7080837773287956486);
        public override string CoherenceComponentName => "_14d4e5096425b424096f9457117bcf3c_7080837773287956486";
        public override uint FieldMask => 0b00000000000000000000000100000000;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).Velocity;

            var simFrame = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).VelocitySimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Velocity = Value;
            }
            else
            {
                update.Velocity = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.VelocitySimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _14d4e5096425b424096f9457117bcf3c_7080837773287956486();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_14d4e5096425b424096f9457117bcf3c_35cf04de7a854f50bf70adb5df8fb4b2 : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_14d4e5096425b424096f9457117bcf3c_7080837773287956486);
        public override string CoherenceComponentName => "_14d4e5096425b424096f9457117bcf3c_7080837773287956486";
        public override uint FieldMask => 0b00000000000000000000001000000000;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).Sprinting;

            var simFrame = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).SprintingSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Sprinting = Value;
            }
            else
            {
                update.Sprinting = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.SprintingSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _14d4e5096425b424096f9457117bcf3c_7080837773287956486();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_14d4e5096425b424096f9457117bcf3c_f2afa19dda3a49c3868f75c971ac44ab : BoolAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_14d4e5096425b424096f9457117bcf3c_7080837773287956486);
        public override string CoherenceComponentName => "_14d4e5096425b424096f9457117bcf3c_7080837773287956486";
        public override uint FieldMask => 0b00000000000000000000010000000000;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.GetBool(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetBool(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).Moving;

            var simFrame = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).MovingSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Moving = Value;
            }
            else
            {
                update.Moving = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.MovingSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _14d4e5096425b424096f9457117bcf3c_7080837773287956486();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_14d4e5096425b424096f9457117bcf3c_cca20b7a553241aea96ddc2daecfc954 : BoolAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_14d4e5096425b424096f9457117bcf3c_7080837773287956486);
        public override string CoherenceComponentName => "_14d4e5096425b424096f9457117bcf3c_7080837773287956486";
        public override uint FieldMask => 0b00000000000000000000100000000000;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.GetBool(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetBool(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).Crouching;

            var simFrame = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).CrouchingSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Crouching = Value;
            }
            else
            {
                update.Crouching = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.CrouchingSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _14d4e5096425b424096f9457117bcf3c_7080837773287956486();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_14d4e5096425b424096f9457117bcf3c_d08c138f0a89412aaa0180bfe677b509 : BoolAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_14d4e5096425b424096f9457117bcf3c_7080837773287956486);
        public override string CoherenceComponentName => "_14d4e5096425b424096f9457117bcf3c_7080837773287956486";
        public override uint FieldMask => 0b00000000000000000001000000000000;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.GetBool(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetBool(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).Proning;

            var simFrame = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).ProningSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Proning = Value;
            }
            else
            {
                update.Proning = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.ProningSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _14d4e5096425b424096f9457117bcf3c_7080837773287956486();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_14d4e5096425b424096f9457117bcf3c_f7b4a9a65ca840d88ac4d335ac02021b : BoolAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_14d4e5096425b424096f9457117bcf3c_7080837773287956486);
        public override string CoherenceComponentName => "_14d4e5096425b424096f9457117bcf3c_7080837773287956486";
        public override uint FieldMask => 0b00000000000000000010000000000000;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.GetBool(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetBool(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).InAir;

            var simFrame = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent).InAirSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_14d4e5096425b424096f9457117bcf3c_7080837773287956486)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.InAir = Value;
            }
            else
            {
                update.InAir = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.InAirSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _14d4e5096425b424096f9457117bcf3c_7080837773287956486();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_14d4e5096425b424096f9457117bcf3c_64595bc85e064034ac2d5468fc75f437 : FloatBinding
    {   
        private global::UnityEngine.CharacterController CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.CharacterController)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_14d4e5096425b424096f9457117bcf3c_7080837773287956480);
        public override string CoherenceComponentName => "_14d4e5096425b424096f9457117bcf3c_7080837773287956480";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.minMoveDistance); }
            set { CastedUnityComponent.minMoveDistance = (System.Single)(value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956480)coherenceComponent).minMoveDistance;

            var simFrame = ((_14d4e5096425b424096f9457117bcf3c_7080837773287956480)coherenceComponent).minMoveDistanceSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_14d4e5096425b424096f9457117bcf3c_7080837773287956480)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.minMoveDistance = Value;
            }
            else
            {
                update.minMoveDistance = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.minMoveDistanceSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _14d4e5096425b424096f9457117bcf3c_7080837773287956480();
        }    
    }

    [UnityEngine.Scripting.Preserve]
    public class CoherenceSync_14d4e5096425b424096f9457117bcf3c : CoherenceSyncBaked
    {
        private Entity entityId;
        private Logger logger = Coherence.Log.Log.GetLogger<CoherenceSync_14d4e5096425b424096f9457117bcf3c>();
        
        
        
        private IClient client;
        private CoherenceBridge bridge;
        
        private readonly Dictionary<string, Binding> bakedValueBindings = new Dictionary<string, Binding>()
        {
			["fb08a1cf66fd4f98bb64c2d94d247538"] = new Binding_14d4e5096425b424096f9457117bcf3c_fb08a1cf66fd4f98bb64c2d94d247538(),
			["d89cc70bc2f74fb79717340aef294810"] = new Binding_14d4e5096425b424096f9457117bcf3c_d89cc70bc2f74fb79717340aef294810(),
			["f55b4048c6694c53b8c4b4406c436a91"] = new Binding_14d4e5096425b424096f9457117bcf3c_f55b4048c6694c53b8c4b4406c436a91(),
			["9c603a7163b4418f88ef82e9c84273dc"] = new Binding_14d4e5096425b424096f9457117bcf3c_9c603a7163b4418f88ef82e9c84273dc(),
			["52a203a5445344ffb8056364907b45ed"] = new Binding_14d4e5096425b424096f9457117bcf3c_52a203a5445344ffb8056364907b45ed(),
			["95303217d8af4d22b2d6a0e9771dfde3"] = new Binding_14d4e5096425b424096f9457117bcf3c_95303217d8af4d22b2d6a0e9771dfde3(),
			["2143488faea5481abe29722b89da3310"] = new Binding_14d4e5096425b424096f9457117bcf3c_2143488faea5481abe29722b89da3310(),
			["2861594a33444fa8a7b59e06c788ca0d"] = new Binding_14d4e5096425b424096f9457117bcf3c_2861594a33444fa8a7b59e06c788ca0d(),
			["7a71492fa10d47e0b77ed8b0caf02a79"] = new Binding_14d4e5096425b424096f9457117bcf3c_7a71492fa10d47e0b77ed8b0caf02a79(),
			["e67cf2f0344f482e8aeedb770df1af50"] = new Binding_14d4e5096425b424096f9457117bcf3c_e67cf2f0344f482e8aeedb770df1af50(),
			["b742f1ab9b2b449b9814ad9f4f133d21"] = new Binding_14d4e5096425b424096f9457117bcf3c_b742f1ab9b2b449b9814ad9f4f133d21(),
			["35cf04de7a854f50bf70adb5df8fb4b2"] = new Binding_14d4e5096425b424096f9457117bcf3c_35cf04de7a854f50bf70adb5df8fb4b2(),
			["f2afa19dda3a49c3868f75c971ac44ab"] = new Binding_14d4e5096425b424096f9457117bcf3c_f2afa19dda3a49c3868f75c971ac44ab(),
			["cca20b7a553241aea96ddc2daecfc954"] = new Binding_14d4e5096425b424096f9457117bcf3c_cca20b7a553241aea96ddc2daecfc954(),
			["d08c138f0a89412aaa0180bfe677b509"] = new Binding_14d4e5096425b424096f9457117bcf3c_d08c138f0a89412aaa0180bfe677b509(),
			["f7b4a9a65ca840d88ac4d335ac02021b"] = new Binding_14d4e5096425b424096f9457117bcf3c_f7b4a9a65ca840d88ac4d335ac02021b(),
			["64595bc85e064034ac2d5468fc75f437"] = new Binding_14d4e5096425b424096f9457117bcf3c_64595bc85e064034ac2d5468fc75f437(),
        };
        
        private Dictionary<string, Action<CommandBinding, CommandsHandler>> bakedCommandBindings = new Dictionary<string, Action<CommandBinding, CommandsHandler>>();
        
        public CoherenceSync_14d4e5096425b424096f9457117bcf3c()
        {
        }
        
        public override Binding BakeValueBinding(Binding valueBinding)
        {
            if (bakedValueBindings.TryGetValue(valueBinding.guid, out var bakedBinding))
            {
                valueBinding.CloneTo(bakedBinding);
                return bakedBinding;
            }
            
            return null;
        }
        
        public override void BakeCommandBinding(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            if (bakedCommandBindings.TryGetValue(commandBinding.guid, out var commandBindingBaker))
            {
                commandBindingBaker.Invoke(commandBinding, commandsHandler);
            }
        }
        
        public override void ReceiveCommand(IEntityCommand command)
        {
            switch (command)
            {
                default:
                    logger.Warning(Coherence.Log.Warning.ToolkitBakedSyncReceiveCommandUnhandled,
                        $"CoherenceSync_14d4e5096425b424096f9457117bcf3c Unhandled command: {command.GetType()}.");
                    break;
            }
        }
        
        public override void CreateEntity(bool usesLodsAtRuntime, string archetypeName, AbsoluteSimulationFrame simFrame, List<ICoherenceComponentData> components)
        {

            if (!usesLodsAtRuntime)
            {
                return;
            }
            
            if (Archetypes.IndexForName.TryGetValue(archetypeName, out int archetypeIndex))
            {
                components.Add(new ArchetypeComponent
                    {
                        index = archetypeIndex,
                        indexSimulationFrame = simFrame,
                        FieldsMask = 0b1
                    }
                );

                return;                
            }
    
            logger.Warning(Coherence.Log.Warning.ToolkitBakedSyncCreateEntityMissingArchetype,
                $"Unable to find archetype {archetypeName} in dictionary. Please, bake manually (coherence > Bake)");
        }
        
        public override void Dispose()
        {
        }
        
        public override void Initialize(Entity entityId, CoherenceBridge bridge, IClient client, CoherenceInput input, Logger logger)
        {
            this.logger = logger.With<CoherenceSync_14d4e5096425b424096f9457117bcf3c>();
            this.bridge = bridge;
            this.entityId = entityId;
            this.client = client;        
        }
    }
}
